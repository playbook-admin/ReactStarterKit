<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<UserSecretsId>24C8344F-0D82-4A87-9DBA-BDA7680F9777</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<Folder Include="App_Data\" />
		<Folder Include="Properties\PublishProfiles\" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="8.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.7" />
		<PackageReference Include="Microsoft.IdentityModel.Tokens" Version="8.0.1" />
		<PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" Version="8.0.0" />
		<PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.6.2" />
		<PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.6.2" />
		<PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.6.2" />
		<PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.6.2" />
		<PackageReference Include="jQWidgets.AspNetCore.Mvc.TagHelpers" Version="1.1.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="5.0.0-preview.8.20414.8" />
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Data.Sqlite.Core" Version="8.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="8.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="8.0.6" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="8.0.6" />
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.20.1" />
		<PackageReference Include="System.Configuration.ConfigurationManager" Version="8.0.0" />
		<PackageReference Include="System.Data.SqlClient" Version="4.8.6" />
		<PackageReference Include="SixLabors.ImageSharp" Version="3.1.5" />
	</ItemGroup>

	<ItemGroup>
		<None Update="App_Data\Personal.db">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\.babelrc">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <TypeScriptCompile Remove="node_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <None Include="wwwroot\DragAndDrop.css" />
	  <None Include="wwwroot\favicon.ico" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:prod" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
	  <Exec Command="powershell -ExecutionPolicy Bypass -File $(ProjectDir)build.ps1" />
	</Target>

</Project>
